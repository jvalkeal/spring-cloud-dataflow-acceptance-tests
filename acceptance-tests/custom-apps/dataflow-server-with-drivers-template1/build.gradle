buildscript {
	ext {
		jarPostfix = project.properties['jarPostfix'] ?: '17x'
		projectBuildVersion = project.properties['projectBuildVersion'] ?: '1.7.4.BUILD-SNAPSHOT'
		springBootVersion = project.properties['springBootVersion'] ?: '1.5.9.RELEASE'
		oracleJdbcDriverVersion = project.properties['oracleJdbcDriverVersion'] ?: '12.2.0.1'
		mssqlJdbcDriverVersion = project.properties['mssqlJdbcDriverVersion'] ?: '7.0.0.jre8'
		db2JdbcDriverVersion = project.properties['db2JdbcDriverVersion'] ?: '4.19.26'
		springCloudVersion = project.properties['springCloudVersion'] ?: 'Dalston.SR5'
		springCloudDataflowVersion = project.properties['springCloudDataflowVersion'] ?: '1.7.4.BUILD-SNAPSHOT'
		springCloudTaskVersion = project.properties['springCloudTaskVersion'] ?: '1.3.1.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url 'http://repo.springsource.org/plugins-release' }
	}
	dependencies {
		classpath("io.spring.gradle:propdeps-plugin:0.0.8")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'

group = 'org.springframework.cloud.dataflow.acceptance.app'
version = "${projectBuildVersion}"
sourceCompatibility = 1.8

jar {
	archivesBaseName = "dataflow-server-with-drivers${jarPostfix}"
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.springsource.org/libs-snapshot" }
	maven { url "http://repo.springsource.org/libs-release" }
	maven { url "http://repo.springsource.org/libs-milestone" }
	maven {
		url "http://repo.springsource.org/ext-private-local"
		credentials {
			username = System.getenv('ARTIFACTORY_USERNAME') ?: artifactoryUsername
			password = System.getenv('ARTIFACTORY_PASSWORD') ?: artifactoryPassword
		}
	}

}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-dataflow-server-local')
	runtime("com.oracle.jdbc:ojdbc8:${oracleJdbcDriverVersion}")
	//runtime("com.microsoft.sqlserver:mssql-jdbc:${mssqlJdbcDriverVersion}")
	runtime("com.ibm.db2:db2jcc4:${db2JdbcDriverVersion}")
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dataflow-dependencies:${springCloudDataflowVersion}"
	}
	dependencies {
		dependency "org.springframework.cloud:spring-cloud-task-core:${springCloudTaskVersion}"
	}
}
