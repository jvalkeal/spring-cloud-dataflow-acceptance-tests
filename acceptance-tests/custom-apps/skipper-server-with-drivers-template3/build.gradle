buildscript {
	ext {
		jarPostfix = project.properties['jarPostfix'] ?: '20x'
		projectBuildVersion = project.properties['projectBuildVersion'] ?: '2.0.1.BUILD-SNAPSHOT'
		springBootVersion = project.properties['springBootVersion'] ?: '2.1.3.RELEASE'
		oracleJdbcDriverVersion = project.properties['oracleJdbcDriverVersion'] ?: '12.2.0.1'
		mssqlJdbcDriverVersion = project.properties['mssqlJdbcDriverVersion'] ?: '7.0.0.jre8'
		db2JdbcDriverVersion = project.properties['db2JdbcDriverVersion'] ?: '4.19.26'
		springCloudVersion = project.properties['springCloudVersion'] ?: 'Greenwich.SR1'
		springCloudSkipperVersion = project.properties['springCloudSkipperVersion'] ?: '2.0.1.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'

group = 'org.springframework.cloud.skipper.acceptance.app'
version = "${projectBuildVersion}"
sourceCompatibility = 1.8

ext {
	mariadbVersion = '2.4.0'
	springSecurityOauth2AutoconfigureVersion = '2.1.3.RELEASE'
	objenesisVersion = '2.6'
}

jar {
	archivesBaseName = "skipper-server-with-drivers${jarPostfix}"
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.springsource.org/libs-snapshot" }
	maven { url "http://repo.springsource.org/libs-release" }
	maven { url "http://repo.springsource.org/libs-milestone" }
	maven {
		url "http://repo.springsource.org/ext-private-local"
		credentials {
			username = System.getenv('ARTIFACTORY_USERNAME') ?: artifactoryUsername
			password = System.getenv('ARTIFACTORY_PASSWORD') ?: artifactoryPassword
		}
	}

}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-skipper-server')
	if (!(project.hasProperty('addJdbcDrivers') && !addJdbcDrivers.toBoolean())) {
		runtime("com.oracle.jdbc:ojdbc8:${oracleJdbcDriverVersion}")
		runtime("com.ibm.db2:db2jcc4:${db2JdbcDriverVersion}")
	}
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-skipper-dependencies:${springCloudSkipperVersion}"
	}
	dependencies {
		dependency "org.mariadb.jdbc:mariadb-java-client:${mariadbVersion}"
		dependency "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${springSecurityOauth2AutoconfigureVersion}"
		// this is unfortunate mess with objenesis as there's different versions
		// in build path and nobody manages version and maven vs. gradle is different
		dependency "org.objenesis:objenesis:${objenesisVersion}"
	}
}
