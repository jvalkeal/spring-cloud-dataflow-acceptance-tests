#resource_types:
#- name: artifactory-resource
#  type: docker-image
#  source:
#    repository: springio/artifactory-resource
#    tag: 0.0.3

resources:
- name: git-repo
  type: git
  source:
    uri: ((github-repo))
    branch: ((branch))

#- name: ci-git-repo
#  type: git
#  source:
#    uri: ((github-repo))
#    branch: ((branch))
#    paths: ["((base-path))/ci/*"]

- name: ci-images-git-repo
  type: git
  source:
    uri: ((github-repo))
    branch: ((branch))
    paths: ["((base-path))ci/images/*"]

#- name: artifactory-repo
#  type: artifactory-resource
#  source:
#    uri: ((artifactory-server))
#    username: ((artifactory-username))
#    password: ((artifactory-password))
#    build_name: ((build-name))

- name: spring-cloud-dataflow-ci-image
  type: docker-image
  source:
    repository: springsource-docker-private-local.jfrog.io/spring-cloud-dataflow-ci-image
    username: ((artifactory-username))
    password: ((artifactory-password))
    tag: ((branch))

- name: acceptance-tests-reports
  type: s3
  source:
    bucket: ((spr-artifacts-s3-bucket-name))
    regexp: distribution-repository/spring-cloud-dataflow-acceptance-tests-(.*).tar.gz
    access_key_id: ((spr-s3-access-key-id))
    secret_access_key: ((spr-s3-secret-access-key))
    region_name: us-west-1

jobs:
- name: spring-cloud-dataflow-ci-images
  plan:
  - get: ci-images-git-repo
    trigger: true
  - put: spring-cloud-dataflow-ci-image
    params:
      build: ci-images-git-repo/((base-path))/ci/images/spring-cloud-dataflow-ci-image
      build_args:
        BRANCH: ((branch))
        GITHUB_REPO_RAW: ((github-repo-raw))
        BASE_PATH: ((base-path))

- name: acceptance-tests
  serial: true
  public: false
  plan:
  - get: spring-cloud-dataflow-ci-image
    trigger: true
    passed:
      - "spring-cloud-dataflow-ci-images"
  - get: git-repo
    trigger: true
#  - get: artifactory-repo
#    trigger: true
  - do:
    - task: build-project
      privileged: true
      timeout: 90m
      image: spring-cloud-dataflow-ci-image
      file: git-repo/((base-path))/ci/tasks/build-project.yml
      params:
        BASE_PATH: ((base-path))

        SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_URL: https://api.sys.needles.cf-app.com
        SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_ORG: bamboo
        SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SPACE: test
        SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_DOMAIN: app.needles.cf-app.com
        SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SKIP_SSL_VALIDATION: true
        SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_STREAM_SERVICES: rabbit
        SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_TASK_SERVICES: mysql
        MYSQL_SERVICE_NAME: p-mysql
        MYSQL_PLAN_NAME: 100mb
        RABBIT_SERVICE_NAME: p-rabbitmq
        RABBIT_PLAN_NAME: standard
        REDIS_SERVICE_NAME: p-redis
        REDIS_PLAN_NAME: shared-vm
        DEPLOY_PAUSE_TIME: 10
        TRUST_CERTS: api.sys.needles.cf-app.com
        CF_DIAL_TIMEOUT: 600
        JAVA_BUILDPACK: java_buildpack_offline

        PLATFORM: cloudfoundry
        BINDER: rabbit
        DATAFLOW_VERSION: 1.6.1.BUILD-SNAPSHOT


      on_failure:
        aggregate:
        - put: acceptance-tests-reports
          params:
            file: distribution-repository/spring-cloud-dataflow-acceptance-tests-*.tar.gz

